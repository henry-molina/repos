ALTER TABLE "SCH_CENTRA_ID"."APPLICATIONS" ADD CONSTRAINT APPLICATIONS_APPLICATIONS_GROUP_FK FOREIGN KEY ("APPLICATION_GROUP_ID") REFERENCES "CENTRA_ID"."SCH_CENTRA_ID"."APPLICATIONS_GROUP" ("ID")
go
ALTER TABLE "SCH_CENTRA_ID"."CATALOGS" ADD CONSTRAINT CATALOGS_TYPESCATALOGS_FK FOREIGN KEY ("CATALOG_TYPE_ID") REFERENCES "CENTRA_ID"."SCH_CENTRA_ID"."CATALOGS_TYPES" ("ID")
go
ALTER TABLE "SCH_CENTRA_ID"."CATALOGS_HIERARCHIES" ADD CONSTRAINT HIERARCHIES_CATALOGS_COMPANY_TYPE_FK FOREIGN KEY ("CATALOG_COMPANY_TYPE_ID") REFERENCES "CENTRA_ID"."SCH_CENTRA_ID"."CATALOGS" ("ID")
go
ALTER TABLE "SCH_CENTRA_ID"."CATALOGS_HIERARCHIES" ADD CONSTRAINT HIERARCHIES_HIERARCHIES_FK FOREIGN KEY ("PARENT_ID") REFERENCES "CENTRA_ID"."SCH_CENTRA_ID"."CATALOGS_HIERARCHIES" ("ID")
go
ALTER TABLE "SCH_CENTRA_ID"."CATALOGS_HIERARCHIES" ADD CONSTRAINT HIERARCHIES_TYPES_CATALOGS_FK FOREIGN KEY ("CATALOG_TYPE_ID") REFERENCES "CENTRA_ID"."SCH_CENTRA_ID"."CATALOGS_TYPES" ("ID")
go
ALTER TABLE "SCH_CENTRA_ID"."CATALOGS_TYPES" ADD CONSTRAINT TYPES_CATALOGS_SORT_TYPE_CK CHECK ([SORT_TYPE]='O' OR [SORT_TYPE]='A')
go
ALTER TABLE "SCH_CENTRA_ID"."COMPANIES" ADD CONSTRAINT COMPANIES_CATALOGS_COMPANY_TYPE_FK FOREIGN KEY ("CATALOG_COMPANY_TYPE_ID") REFERENCES "CENTRA_ID"."SCH_CENTRA_ID"."CATALOGS" ("ID")
go
ALTER TABLE "SCH_CENTRA_ID"."COMPANIES_STRUCTURES" ADD CONSTRAINT ORGANIZATIONSSTRUCTURES_CATALOGSORGANIZATIONALSTRUCTURE_FK FOREIGN KEY ("CATALOG_ORGANIZATIONAL_STRUCTURE_ID") REFERENCES "CENTRA_ID"."SCH_CENTRA_ID"."CATALOGS" ("ID")
go
ALTER TABLE "SCH_CENTRA_ID"."COMPANIES_STRUCTURES" ADD CONSTRAINT ORGANIZATIONSSTRUCTURES_COMPANIES_FK FOREIGN KEY ("COMPANY_ID") REFERENCES "CENTRA_ID"."SCH_CENTRA_ID"."COMPANIES" ("ID")
go
ALTER TABLE "SCH_CENTRA_ID"."COMPANIES_STRUCTURES" ADD CONSTRAINT ORGANIZATIONSSTRUCTURES_ORGANIZATIONSSTRUCTURES_FK FOREIGN KEY ("PARENT_ID") REFERENCES "CENTRA_ID"."SCH_CENTRA_ID"."COMPANIES_STRUCTURES" ("ID")
go
ALTER TABLE "SCH_CENTRA_ID"."COSTS_CENTERS" ADD CONSTRAINT COSTSCENTERS_COMPANIES_FK FOREIGN KEY ("COMPANY_ID") REFERENCES "CENTRA_ID"."SCH_CENTRA_ID"."COMPANIES" ("ID")
go
ALTER TABLE "SCH_CENTRA_ID"."COSTS_CENTERS" ADD CONSTRAINT COSTSCENTERS_COSTSCENTERS_FK FOREIGN KEY ("PARENT_ID") REFERENCES "CENTRA_ID"."SCH_CENTRA_ID"."COSTS_CENTERS" ("ID")
go
ALTER TABLE "SCH_CENTRA_ID"."DEFAULT_PROFILES" ADD CONSTRAINT DEFAULT_PROFILES_GLOBAL_PROFILES_FK FOREIGN KEY ("GLOBAL_PROFILE_ID") REFERENCES "CENTRA_ID"."SCH_CENTRA_ID"."GLOBAL_PROFILES" ("ID")
go
ALTER TABLE "SCH_CENTRA_ID"."DISTRIBUTION_LIST_DETAIL" ADD CONSTRAINT DISTRIBUTIONLISTDETAIL_DISTRIBUTIONLIST_FK FOREIGN KEY ("DISTRIBUTION_LIST_ID") REFERENCES "CENTRA_ID"."SCH_CENTRA_ID"."DISTRIBUTION_LIST" ("ID")
go
ALTER TABLE "SCH_CENTRA_ID"."FIELDS" ADD CONSTRAINT FIELDS_APPLICATIONS_GROUP_FK FOREIGN KEY ("APPLICATION_GROUP_ID") REFERENCES "CENTRA_ID"."SCH_CENTRA_ID"."APPLICATIONS_GROUP" ("ID")
go
ALTER TABLE "SCH_CENTRA_ID"."GLOBAL_PARAMETERS" ADD CONSTRAINT GLOBAL_PARAMETERS_TYPE_CK CHECK ([TYPE]='B' OR [TYPE]='D' OR [TYPE]='N' OR [TYPE]='S')
go
ALTER TABLE "SCH_CENTRA_ID"."GLOBAL_PROFILES" ADD CONSTRAINT GLOBALPROFILES_CATALOGS_POSITION_OWNER_FK FOREIGN KEY ("CATALOG_POSITION_OWNER_ID") REFERENCES "CENTRA_ID"."SCH_CENTRA_ID"."CATALOGS" ("ID")
go
ALTER TABLE "SCH_CENTRA_ID"."GLOBAL_TRANSACTIONAL_PROFILES" ADD CONSTRAINT GLOBAL_TRANSACTIONAL_PROFILES_GLOBAL_PROFILES_FK FOREIGN KEY ("GLOBAL_PROFILE_ID") REFERENCES "CENTRA_ID"."SCH_CENTRA_ID"."GLOBAL_PROFILES" ("ID")
go
ALTER TABLE "SCH_CENTRA_ID"."GLOBAL_TRANSACTIONAL_PROFILES" ADD CONSTRAINT GLOBAL_TRANSACTIONAL_PROFILES_TRANSACTIONAL_PROFILES_FK FOREIGN KEY ("TRANSACTIONAL_PROFILE_ID") REFERENCES "CENTRA_ID"."SCH_CENTRA_ID"."TRANSACTIONAL_PROFILES" ("ID")
go
ALTER TABLE "SCH_CENTRA_ID"."HISTORY_SCOPE_RULES" ADD CONSTRAINT HISTORY_SCOPE_RULES_GLOBAL_PROFILES_FK FOREIGN KEY ("GLOBAL_PROFILE_ID") REFERENCES "CENTRA_ID"."SCH_CENTRA_ID"."GLOBAL_PROFILES" ("ID")
go
ALTER TABLE "SCH_CENTRA_ID"."MASSIVE_PROCESS" ADD CONSTRAINT MASIVE_PROCESS_TYPEEVENT_CK CHECK ([TYPE_EVENT]='C' OR [TYPE_EVENT]='P')
go
ALTER TABLE "SCH_CENTRA_ID"."MASSIVE_PROCESS" ADD CONSTRAINT MASSIVE_PROCESS_RESULT_UK CHECK ([RESULT]='P' OR [RESULT]='C' OR [RESULT]='I')
go
ALTER TABLE "SCH_CENTRA_ID"."MASSIVE_PROCESS" ADD CONSTRAINT MASSIVE_PROCESS_STATE_UK CHECK ([STATE]='Y' OR [STATE]='N' OR [STATE]='S')
go
ALTER TABLE "SCH_CENTRA_ID"."MASSIVE_PROCESS" ADD CONSTRAINT MASSIVE_PROCESS_TYPEACTION_UK CHECK ([TYPE_ACTION]='D' OR [TYPE_ACTION]='U' OR [TYPE_ACTION]='C')
go
ALTER TABLE "SCH_CENTRA_ID"."MATRICES" ADD CONSTRAINT MATRICES_APPLICATIONS_GROUP_FK FOREIGN KEY ("APPLICATION_GROUP_ID") REFERENCES "CENTRA_ID"."SCH_CENTRA_ID"."APPLICATIONS_GROUP" ("ID")
go
ALTER TABLE "SCH_CENTRA_ID"."MATRICES_DETAIL" ADD CONSTRAINT MATRICES_DETAIL_MATRICES_FK FOREIGN KEY ("MATRIX_ID") REFERENCES "CENTRA_ID"."SCH_CENTRA_ID"."MATRICES" ("ID")
go
ALTER TABLE "SCH_CENTRA_ID"."OPERATIONS_PROVISIONING" ADD CONSTRAINT USER_PROFILE_TRANSACTIONAL_HISTORY_GLOBAL_PROFILES_FK FOREIGN KEY ("GLOBAL_PROFILE_ID") REFERENCES "CENTRA_ID"."SCH_CENTRA_ID"."GLOBAL_PROFILES" ("ID")
go
ALTER TABLE "SCH_CENTRA_ID"."OPERATIONS_PROVISIONING" ADD CONSTRAINT USER_PROFILE_TRANSACTIONAL_HISTORY_TRANSACTIONAL_IDENTITY_FK FOREIGN KEY ("TRANSACTIONAL_IDENTITY_ID") REFERENCES "CENTRA_ID"."SCH_CENTRA_ID"."TRANSACTIONAL_IDENTITY" ("ID")
go
ALTER TABLE "SCH_CENTRA_ID"."OPERATIONS_PROVISIONING" ADD CONSTRAINT USER_PROFILE_TRANSACTIONAL_HISTORY_USERDATA_FK FOREIGN KEY ("USER_DATA_ID") REFERENCES "CENTRA_ID"."SCH_CENTRA_ID"."USERDATA" ("ID")
go
ALTER TABLE "SCH_CENTRA_ID"."PROCESS_DISTRIBUTION_LIST" ADD CONSTRAINT PROCESSDISTRIBUTIONLIST_DISTRIBUTIONLIST_FK FOREIGN KEY ("DISTRIBUTION_LIST_ID") REFERENCES "CENTRA_ID"."SCH_CENTRA_ID"."DISTRIBUTION_LIST" ("ID")
go
ALTER TABLE "SCH_CENTRA_ID"."PROCESS_DISTRIBUTION_LIST" ADD CONSTRAINT PROCESSDISTRIBUTIONLIST_PROCESS_FK FOREIGN KEY ("PROCESS_ID") REFERENCES "CENTRA_ID"."SCH_CENTRA_ID"."PROCESS" ("ID")
go
ALTER TABLE "SCH_CENTRA_ID"."PROFILES_SYNCHRONIZATION" ADD CONSTRAINT PROFILES_SYNCHRONIZATION_GLOBAL_PROFILES_FK FOREIGN KEY ("GLOBAL_PROFILE_ID") REFERENCES "CENTRA_ID"."SCH_CENTRA_ID"."GLOBAL_PROFILES" ("ID")
go
ALTER TABLE "SCH_CENTRA_ID"."PROFILES_SYNCHRONIZATION" ADD CONSTRAINT PROFILES_SYNCHRONIZATION_PROFILE_SYNCHRONIZATION_EXECUTION_FK FOREIGN KEY ("PROFILE_SYNCHRONIZATION_EXECUTION_ID") REFERENCES "CENTRA_ID"."SCH_CENTRA_ID"."PROFILES_SYNCHRONIZATION_EXECUTIONS" ("ID")
go
ALTER TABLE "SCH_CENTRA_ID"."PROFILES_SYNCHRONIZATION" ADD CONSTRAINT PROFILES_SYNCHRONIZATION_TRANSACTIONAL_PROFILES_FK FOREIGN KEY ("TRANSACTIONAL_PROFILE_ID") REFERENCES "CENTRA_ID"."SCH_CENTRA_ID"."TRANSACTIONAL_PROFILES" ("ID")
go
ALTER TABLE "SCH_CENTRA_ID"."PROFILES_SYNCHRONIZATION_EXECUTIONS" ADD CONSTRAINT PROFILES_SYNCHRONIZATION_EXECUTIONS_GLOBAL_PROFILES_FK FOREIGN KEY ("GLOBAL_PROFILE_ID") REFERENCES "CENTRA_ID"."SCH_CENTRA_ID"."GLOBAL_PROFILES" ("ID")
go
ALTER TABLE "SCH_CENTRA_ID"."PROFILES_SYNCHRONIZATION_EXECUTIONS" ADD CONSTRAINT PROFILES_SYNCHRONIZATION_EXECUTIONS_TRANSACTIONAL_PROFILES_FK FOREIGN KEY ("TRANSACTIONAL_PROFILE_ID") REFERENCES "CENTRA_ID"."SCH_CENTRA_ID"."TRANSACTIONAL_PROFILES" ("ID")
go
ALTER TABLE "SCH_CENTRA_ID"."TAKS_PROVISIONING" ADD CONSTRAINT USER_ACTION_PROFILE_TRANSACTIONAL_APPLICATIONS_FK FOREIGN KEY ("APPLICATION_ID") REFERENCES "CENTRA_ID"."SCH_CENTRA_ID"."APPLICATIONS" ("ID")
go
ALTER TABLE "SCH_CENTRA_ID"."TAKS_PROVISIONING" ADD CONSTRAINT USER_ACTION_PROFILE_TRANSACTIONAL_USER_PROFILE_TRANSACTIONAL_HISTORY_FK FOREIGN KEY ("OPERATION_PROVISIONING_ID") REFERENCES "CENTRA_ID"."SCH_CENTRA_ID"."OPERATIONS_PROVISIONING" ("ID")
go
ALTER TABLE "SCH_CENTRA_ID"."TAKS_PROVISIONING" ADD CONSTRAINT USER_ACTION_PROFILE_TRANSACTIONAL_TRANSACTIONAL_PROFILES_FK FOREIGN KEY ("TRANSACTIONAL_PROFILE_ID") REFERENCES "CENTRA_ID"."SCH_CENTRA_ID"."TRANSACTIONAL_PROFILES" ("ID")
go
ALTER TABLE "SCH_CENTRA_ID"."TAKS_PROVISIONING_HISTORY" ADD CONSTRAINT TAKS_PROVISIONING_HISTORY_TAKS_PROVISIONING_FK FOREIGN KEY ("TASK_PROVISIONING_ID") REFERENCES "CENTRA_ID"."SCH_CENTRA_ID"."TAKS_PROVISIONING" ("ID")
go
ALTER TABLE "SCH_CENTRA_ID"."TEMPLATE_PROFILES" ADD CONSTRAINT TEMPLATE_PROFILES_FIELDS_FK FOREIGN KEY ("FIELD_ID") REFERENCES "CENTRA_ID"."SCH_CENTRA_ID"."FIELDS" ("ID")
go
ALTER TABLE "SCH_CENTRA_ID"."TEMPLATE_PROFILES" ADD CONSTRAINT TEMPLATE_PROFILES_TRANSACTIONAL_PROFILES_FK FOREIGN KEY ("TRANSACTIONAL_PROFILE_ID") REFERENCES "CENTRA_ID"."SCH_CENTRA_ID"."TRANSACTIONAL_PROFILES" ("ID")
go
ALTER TABLE "SCH_CENTRA_ID"."TEMPLATE_PROFILES_AD" ADD CONSTRAINT TEMPLATE_PROFILE_AD_FIELD_ACTIVATE_MAIL_FK FOREIGN KEY ("FIELD_ACTIVATE_MAIL_ID") REFERENCES "CENTRA_ID"."SCH_CENTRA_ID"."FIELDS" ("ID")
go
ALTER TABLE "SCH_CENTRA_ID"."TEMPLATE_PROFILES_AD" ADD CONSTRAINT TEMPLATE_PROFILE_AD_FIELD_SHOULD_CHANGE_PASSWORD_FIRST_TIME_FK FOREIGN KEY ("FIELD_SHOULD_CHANGE_PASSWORD_FIRST_TIME_ID") REFERENCES "CENTRA_ID"."SCH_CENTRA_ID"."FIELDS" ("ID")
go
ALTER TABLE "SCH_CENTRA_ID"."TEMPLATE_PROFILES_AD" ADD CONSTRAINT TEMPLATE_PROFILE_AD_FIELD_SHOULD_NOT_CHANGE_PASSWORD_FK FOREIGN KEY ("FIELD_SHOULD_NOT_CHANGE_PASSWORD_ID") REFERENCES "CENTRA_ID"."SCH_CENTRA_ID"."FIELDS" ("ID")
go
ALTER TABLE "SCH_CENTRA_ID"."TEMPLATE_PROFILES_AD" ADD CONSTRAINT TEMPLATE_PROFILE_AD_FIELD_PASSWORD_NOT_EXPIRE_FK FOREIGN KEY ("FIELD_PASSWORD_NOT_EXPIRE_ID") REFERENCES "CENTRA_ID"."SCH_CENTRA_ID"."FIELDS" ("ID")
go
ALTER TABLE "SCH_CENTRA_ID"."TEMPLATE_PROFILES_AD" ADD CONSTRAINT TEMPLATE_PROFILE_AD_FIELD_ACCOUNT_CONTAINER_FK FOREIGN KEY ("FIELD_ACCOUNT_CONTAINER_ID") REFERENCES "CENTRA_ID"."SCH_CENTRA_ID"."FIELDS" ("ID")
go
ALTER TABLE "SCH_CENTRA_ID"."TEMPLATE_PROFILES_AD" ADD CONSTRAINT TEMPLATE_PROFILE_AD_FIELD_GROUP_AD_FK FOREIGN KEY ("FIELD_GROUP_AD_ID") REFERENCES "CENTRA_ID"."SCH_CENTRA_ID"."FIELDS" ("ID")
go
ALTER TABLE "SCH_CENTRA_ID"."TEMPLATE_PROFILES_AD" ADD CONSTRAINT TEMPLATE_PROFILE_AD_FIELD_EXCHANGE_ADVANCED_OWA_FK FOREIGN KEY ("FIELD_EXCHANGE_ADVANCED_OWA_ID") REFERENCES "CENTRA_ID"."SCH_CENTRA_ID"."FIELDS" ("ID")
go
ALTER TABLE "SCH_CENTRA_ID"."TEMPLATE_PROFILES_AD" ADD CONSTRAINT TEMPLATE_PROFILE_AD_FIELD_EXCHANGE_ADVANCED_ACTIVE_SYNC_FK FOREIGN KEY ("FIELD_EXCHANGE_ADVANCED_ACTIVE_SYNC_ID") REFERENCES "CENTRA_ID"."SCH_CENTRA_ID"."FIELDS" ("ID")
go
ALTER TABLE "SCH_CENTRA_ID"."TEMPLATE_PROFILES_AD" ADD CONSTRAINT TEMPLATE_PROFILE_AD_FIELD_SIP_FK FOREIGN KEY ("FIELD_SIP_ID") REFERENCES "CENTRA_ID"."SCH_CENTRA_ID"."FIELDS" ("ID")
go
ALTER TABLE "SCH_CENTRA_ID"."TEMPLATE_PROFILES_AD" ADD CONSTRAINT TEMPLATE_PROFILE_AD_FIELD_TERMINAL_SERVICES_PROFILE_FK FOREIGN KEY ("FIELD_TERMINAL_SERVICES_PROFILE_ID") REFERENCES "CENTRA_ID"."SCH_CENTRA_ID"."FIELDS" ("ID")
go
ALTER TABLE "SCH_CENTRA_ID"."TEMPLATE_PROFILES_AD" ADD CONSTRAINT TEMPLATE_PROFILE_AD_FIELD_CONNECT_FOLLOWING_DRIVE_FK FOREIGN KEY ("FIELD_CONNECT_FOLLOWING_DRIVE_ID") REFERENCES "CENTRA_ID"."SCH_CENTRA_ID"."FIELDS" ("ID")
go
ALTER TABLE "SCH_CENTRA_ID"."TEMPLATE_PROFILES_AD" ADD CONSTRAINT TEMPLATE_PROFILE_AD_FIELD_TERMINAL_SERVICES_HOME_DIRECTORY_FK FOREIGN KEY ("FIELD_TERMINAL_SERVICES_HOME_DIRECTORY_ID") REFERENCES "CENTRA_ID"."SCH_CENTRA_ID"."FIELDS" ("ID")
go
ALTER TABLE "SCH_CENTRA_ID"."TEMPLATE_PROFILES_AD" ADD CONSTRAINT TEMPLATE_PROFILE_AD_FIELD_ALLOW_LOGON_TO_TERMINAL_SERVER_FK FOREIGN KEY ("FIELD_ALLOW_LOGON_TO_TERMINAL_SERVER_ID") REFERENCES "CENTRA_ID"."SCH_CENTRA_ID"."FIELDS" ("ID")
go
ALTER TABLE "SCH_CENTRA_ID"."TEMPLATE_PROFILES_AD" ADD CONSTRAINT TEMPLATE_PROFILE_AD_TRANSACTIONAL_PROFILE_FK  FOREIGN KEY ("TRANSACTIONAL_PROFILE_ID") REFERENCES "CENTRA_ID"."SCH_CENTRA_ID"."TRANSACTIONAL_PROFILES" ("ID")
go
ALTER TABLE "SCH_CENTRA_ID"."TEMPLATE_PROFILES_MATRICES" ADD CONSTRAINT TEMPLATE_PROFILES_MATRICES_MATRICES_FK FOREIGN KEY ("MATRIX_ID") REFERENCES "CENTRA_ID"."SCH_CENTRA_ID"."MATRICES" ("ID")
go
ALTER TABLE "SCH_CENTRA_ID"."TEMPLATE_PROFILES_MATRICES" ADD CONSTRAINT TEMPLATE_PROFILES_MATRICES_TRANSACTIONAL_PROFILES_FK FOREIGN KEY ("TRANSACTIONAL_PROFILE_ID") REFERENCES "CENTRA_ID"."SCH_CENTRA_ID"."TRANSACTIONAL_PROFILES" ("ID")
go
ALTER TABLE "SCH_CENTRA_ID"."TEMPLATE_PROFILES_MATRICES_DETAIL" ADD CONSTRAINT TEMPLATE_PROFILES_MATRICES_DETAIL_MATRICES_DETAIL_FK FOREIGN KEY ("MATRIX_DETAIL_ID") REFERENCES "CENTRA_ID"."SCH_CENTRA_ID"."MATRICES_DETAIL" ("ID")
go
ALTER TABLE "SCH_CENTRA_ID"."TEMPLATE_PROFILES_MATRICES_DETAIL" ADD CONSTRAINT TEMPLATE_PROFILES_MATRICES_DETAIL_TEMPLATE_PROFILES_MATRICES_GROUP_FK FOREIGN KEY ("TEMPLATE_PROFILE_MATRIX_GROUP_ID") REFERENCES "CENTRA_ID"."SCH_CENTRA_ID"."TEMPLATE_PROFILES_MATRICES_GROUP" ("ID")
go
ALTER TABLE "SCH_CENTRA_ID"."TEMPLATE_PROFILES_MATRICES_GROUP" ADD CONSTRAINT TEMPLATE_PROFILES_MATRICES_GROUP_TEMPLATE_PROFILES_MATRICES_FK FOREIGN KEY ("TEMPLATE_PROFILE_MATRIX_ID") REFERENCES "CENTRA_ID"."SCH_CENTRA_ID"."TEMPLATE_PROFILES_MATRICES" ("ID")
go
ALTER TABLE "SCH_CENTRA_ID"."TRANSACTIONAL_IDENTITY" ADD CONSTRAINT TRANSACTIONALIDENTITY_GLOBALPROFILE_FK FOREIGN KEY ("GLOBAL_PROFILE_ID") REFERENCES "CENTRA_ID"."SCH_CENTRA_ID"."GLOBAL_PROFILES" ("ID")
go
ALTER TABLE "SCH_CENTRA_ID"."TRANSACTIONAL_IDENTITY" ADD CONSTRAINT TRANSACTIONALIDENTITY_USERDATA_FK FOREIGN KEY ("USER_DATA_ID") REFERENCES "CENTRA_ID"."SCH_CENTRA_ID"."USERDATA" ("ID")
go
ALTER TABLE "SCH_CENTRA_ID"."TRANSACTIONAL_PROFILES" ADD CONSTRAINT TRANSACTIONAL_PROFILES_APPLICATIONS_FK FOREIGN KEY ("APPLICATION_ID") REFERENCES "CENTRA_ID"."SCH_CENTRA_ID"."APPLICATIONS" ("ID")
go
ALTER TABLE "SCH_CENTRA_ID"."TRANSACTIONAL_PROFILES" ADD CONSTRAINT TRANSACTIONALPROFILES_CATALOGS_FK FOREIGN KEY ("CATALOG_RISK_LEVEL_ID") REFERENCES "CENTRA_ID"."SCH_CENTRA_ID"."CATALOGS" ("ID")
go
ALTER TABLE "SCH_CENTRA_ID"."TYPE_USERS" ADD CONSTRAINT TYPESUSERS_TYPESUSERS_FK FOREIGN KEY ("PARENT_ID") REFERENCES "CENTRA_ID"."SCH_CENTRA_ID"."TYPE_USERS" ("ID")
go
ALTER TABLE "SCH_CENTRA_ID"."TYPE_USERS" ADD CONSTRAINT TYPES_USERS_TYPE_CK CHECK ([TYPE]='S' OR [TYPE]='T')
go
ALTER TABLE "SCH_CENTRA_ID"."USERDATA" ADD CONSTRAINT USERDATA_CATALOGS_AREA_FK FOREIGN KEY ("CATALOG_AREA_ID") REFERENCES "CENTRA_ID"."SCH_CENTRA_ID"."CATALOGS" ("ID")
go
ALTER TABLE "SCH_CENTRA_ID"."USERDATA" ADD CONSTRAINT USERDATA_CATALOGS_DEPARTMENT_FK FOREIGN KEY ("CATALOG_DEPARTMENT_ID") REFERENCES "CENTRA_ID"."SCH_CENTRA_ID"."CATALOGS" ("ID")
go
ALTER TABLE "SCH_CENTRA_ID"."USERDATA" ADD CONSTRAINT USERDATA_CATALOGS_DIVISION_FK FOREIGN KEY ("CATALOG_DIVISION_ID") REFERENCES "CENTRA_ID"."SCH_CENTRA_ID"."CATALOGS" ("ID")
go
ALTER TABLE "SCH_CENTRA_ID"."USERDATA" ADD CONSTRAINT USERDATA_CATALOGS_IDENTIFICATION_TYPE_FK FOREIGN KEY ("CATALOG_IDENTIFICATION_TYPE_ID") REFERENCES "CENTRA_ID"."SCH_CENTRA_ID"."CATALOGS" ("ID")
go
ALTER TABLE "SCH_CENTRA_ID"."USERDATA" ADD CONSTRAINT USERDATA_CATALOGS_POSITION_FK FOREIGN KEY ("CATALOG_POSITION_ID") REFERENCES "CENTRA_ID"."SCH_CENTRA_ID"."CATALOGS" ("ID")
go
ALTER TABLE "SCH_CENTRA_ID"."USERDATA" ADD CONSTRAINT USERDATA_COMPANIES_FK FOREIGN KEY ("COMPANY_ID") REFERENCES "CENTRA_ID"."SCH_CENTRA_ID"."COMPANIES" ("ID")
go
ALTER TABLE "SCH_CENTRA_ID"."USERDATA" ADD CONSTRAINT USERDATA_COSTS_CENTERS_FK FOREIGN KEY ("COST_CENTER_ID") REFERENCES "CENTRA_ID"."SCH_CENTRA_ID"."COSTS_CENTERS" ("ID")
go
ALTER TABLE "SCH_CENTRA_ID"."USERDATA" ADD CONSTRAINT USERDATA_GLOBAL_PROFILES_FK FOREIGN KEY ("GLOBAL_PROFILE_ID") REFERENCES "CENTRA_ID"."SCH_CENTRA_ID"."GLOBAL_PROFILES" ("ID")
go
ALTER TABLE "SCH_CENTRA_ID"."USERDATA" ADD CONSTRAINT USERDATA_SUBTYPE_USER_ID_FK FOREIGN KEY ("SUBTYPE_USER_ID") REFERENCES "CENTRA_ID"."SCH_CENTRA_ID"."TYPE_USERS" ("ID")
go
ALTER TABLE "SCH_CENTRA_ID"."USERDATA" ADD CONSTRAINT USERDATA_TYPES_USERS_FK FOREIGN KEY ("TYPE_USER_ID") REFERENCES "CENTRA_ID"."SCH_CENTRA_ID"."TYPE_USERS" ("ID")
go
ALTER TABLE "SCH_CENTRA_ID"."USERDATA" ADD CONSTRAINT USERDATA_USERDATA_BANK_COUNTERPART_FK FOREIGN KEY ("USERDATA_BANK_COUNTERPART_ID") REFERENCES "CENTRA_ID"."SCH_CENTRA_ID"."USERDATA" ("ID")
go
ALTER TABLE "SCH_CENTRA_ID"."USERDATA" ADD CONSTRAINT USERDATA_USERDATA_RESPONSIBLE_USER_FK FOREIGN KEY ("USERDATA_RESPONSIBLE_USER_ID") REFERENCES "CENTRA_ID"."SCH_CENTRA_ID"."USERDATA" ("ID")
go
ALTER TABLE "SCH_CENTRA_ID"."USERDATA" ADD CONSTRAINT USERDATA_USERDATA_SUPERVISOR_FK FOREIGN KEY ("USERDATA_SUPERVISOR_ID") REFERENCES "CENTRA_ID"."SCH_CENTRA_ID"."USERDATA" ("ID")
go
CREATE VIEW SCH_CENTRA_ID.DEFAULT_PROFILES_REPORT_VW (ID, VALID, GLOBAL_PROFILE_CODE, GLOBAL_PROFILE_NAME, DEFAULT_PROFILE_COMPANY_CODE, DEFAULT_PROFILE_DIVISION_CODE, DEFAULT_PROFILE_AREA_CODE, DEFAULT_PROFILE_DEPARTMENT_CODE, DEFAULT_PROFILE_POSITION_NAME, GLOBAL_PROFILE_STATUS, DEFAULT_PROFILE_COMPANY_NAME, DEFAULT_PROFILE_DIVISION_NAME, DEFAULT_PROFILE_AREA_NAME, DEFAULT_PROFILE_DEPARTMENT_NAME) AS 
SELECT 
DF.ID ID,
1 VALID,
GP.CODE GLOBAL_PROFILE_CODE,
GP.NAME GLOBAL_PROFILE_NAME,
DF.CODE_COMPANY DEFAULT_PROFILE_COMPANY_CODE,
DF.CODE_DIVISION DEFAULT_PROFILE_DIVISION_CODE,
DF.CODE_AREA DEFAULT_PROFILE_AREA_CODE,
DF.CODE_DEPARTMENT DEFAULT_PROFILE_DEPARTMENT_CODE,
CASE DF.NAME_POSITION WHEN '' THEN '*' ELSE DF.NAME_POSITION END DEFAULT_PROFILE_POSITION_NAME,
CASE GP.VALID WHEN  1 THEN GP.STATUS ELSE 'ELIMINADO' END  GLOBAL_PROFILE_STATUS,
CASE DF.NAME_COMPANY WHEN '' THEN '*' ELSE DF.NAME_COMPANY END DEFAULT_PROFILE_COMPANY_NAME,
CASE DF.NAME_DIVISION WHEN '' THEN '*' ELSE  DF.NAME_DIVISION END DEFAULT_PROFILE_DIVISION_NAME,
CASE DF.NAME_AREA WHEN '' THEN '*' ELSE DF.NAME_AREA END  DEFAULT_PROFILE_AREA_NAME,
CASE DF.NAME_DEPARTMENT WHEN '' THEN '*' ELSE DF.NAME_DEPARTMENT END DEFAULT_PROFILE_DEPARTMENT_NAME
FROM SCH_CENTRA_ID.DEFAULT_PROFILES DF
JOIN SCH_CENTRA_ID.GLOBAL_PROFILES GP ON DF.GLOBAL_PROFILE_ID=GP.ID
WHERE 
DF.VALID=1
go
CREATE VIEW SCH_CENTRA_ID.GLOBAL_PROFILES_REPORT_VW (ID, VALID, GLOBAL_PROFILE_CODE, GLOBAL_PROFILE_NAME, GLOBAL_PROFILE_IS_BIRTH, GLOBAL_PROFILE_TICKET_NUMBER, GLOBAL_PROFILE_USER_CREATION, GLOBAL_PROFILE_DATE_CREATION, GLOBAL_PROFILE_USER_APPROVAL, GLOBAL_PROFILE_DATE_APPROVAL, GLOBAL_PROFILE_OBSERVATION, GLOBAL_PROFILE_STATUS, GLOBAL_PROFILE_SCOPE_RULES_WHO, GLOBAL_PROFILE_SCOPE_RULES_THAT, GLOBAL_PROFILE_POSITION_NAME_OWNER) AS 
SELECT 
GP.ID AS ID,
1 VALID,
GP.CODE GLOBAL_PROFILE_CODE,
GP.NAME GLOBAL_PROFILE_NAME,
GP.IS_BIRTH GLOBAL_PROFILE_IS_BIRTH,
GP.ASSOCIATED_TICKET_NUMBER GLOBAL_PROFILE_TICKET_NUMBER,
GP.EMPLOYEE_CODE_OWNER GLOBAL_PROFILE_USER_CREATION,
GP.CREATED_DATE GLOBAL_PROFILE_DATE_CREATION,
GP.EMPLOYEE_CODE_APPROVAL GLOBAL_PROFILE_USER_APPROVAL,
GP.APPROVAL_DATE GLOBAL_PROFILE_DATE_APPROVAL,
GP.OBSERVATION AS GLOBAL_PROFILE_OBSERVATION,
CASE GP.VALID WHEN  1 THEN GP.STATUS ELSE 'ELIMINADO' END  GLOBAL_PROFILE_STATUS,
GP.SCOPE_RULES_WHO  GLOBAL_PROFILE_SCOPE_RULES_WHO,
GP.SCOPE_RULES_THAT GLOBAL_PROFILE_SCOPE_RULES_THAT,
C.NAME GLOBAL_PROFILE_POSITION_NAME_OWNER
FROM SCH_CENTRA_ID.GLOBAL_PROFILES GP
LEFT JOIN SCH_CENTRA_ID.CATALOGS C ON GP.CATALOG_POSITION_OWNER_ID=C.ID
go
CREATE VIEW SCH_CENTRA_ID.GLOBAL_TRANSACTIONAL_PROFILES_REPORT_VW (ID, VALID, TRANSACTIONAL_PROFILE_CODE, TRANSACTIONAL_PROFILE_NAME, GLOBAL_PROFILE_CODE, GLOBAL_PROFILE_NAME, APPLICATION_CODE, APPLICATION_NAME, TRANSACTIONAL_PROFILE_RISK_LEVEL, GLOBAL_PROFILE_STATUS) AS 
SELECT 
TP.ID ID ,
1 VALID,
TP.CODE TRANSACTIONAL_PROFILE_CODE ,
TP.NAME TRANSACTIONAL_PROFILE_NAME,
GP.CODE GLOBAL_PROFILE_CODE,
GP.NAME GLOBAL_PROFILE_NAME,
A.CODE APPLICATION_CODE,
A.NAME APPLICATION_NAME,
C_NIVREGI.NAME TRANSACTIONAL_PROFILE_RISK_LEVEL,
CASE GP.VALID WHEN  1 THEN GP.STATUS ELSE 'ELIMINADO' END  GLOBAL_PROFILE_STATUS
FROM SCH_CENTRA_ID.GLOBAL_PROFILES GP
LEFT JOIN SCH_CENTRA_ID.GLOBAL_TRANSACTIONAL_PROFILES GTP ON GTP.GLOBAL_PROFILE_ID=GP.ID
LEFT JOIN SCH_CENTRA_ID.TRANSACTIONAL_PROFILES TP ON TP.ID = GTP.TRANSACTIONAL_PROFILE_ID
LEFT JOIN SCH_CENTRA_ID.APPLICATIONS A ON TP.APPLICATION_ID = A.ID
LEFT JOIN SCH_CENTRA_ID.APPLICATIONS_GROUP AG ON A.APPLICATION_GROUP_ID=AG.ID
LEFT JOIN SCH_CENTRA_ID.CATALOGS C_NIVREGI ON TP.CATALOG_RISK_LEVEL_ID=C_NIVREGI.ID
WHERE 
GTP.VALID=1 AND
TP.VALID=1
go
CREATE VIEW SCH_CENTRA_ID.PROVISIONING_MONITORING_VW (ID, OPERATION_ID, TASK_ID, TASK_DATE, TASK_STATUS, APPLICATION, FULL_NAMES, USERNAME, IDENTIFICATION, ACTION, DATA_INPUT_PROVISIONING, DATA_INPUT_QUEUE, TICKET_CONTENT, TICKET_DATE, TICKET_ERROR, TICKET_NUMBER, TYPE, ORIGEN, VALID) AS 
SELECT
tph.ID ID,
op.ID OPERATION_ID,
tp.ID TASK_ID,
tph.CREATION_DATE TASK_DATE,
tph.STATUS TASK_STATUS,
a.CODE APPLICATION,
ti.EMPLOYEE_LASTNAME + ' ' + ti.EMPLOYEE_FIRSTNAME FULL_NAMES,
ti.USERNAME USERNAME,
ti.IDENTIFICATION IDENTIFICATION,
tp.ACTION ACTION,
tp.DATA_INPUT_PROVISIONING DATA_INPUT_PROVISIONING,
tp.DATA_INPUT_QUEUE  DATA_INPUT_QUEUE,
tph.TICKET_CONTENT TICKET_CONTENT,
tph.TICKET_DATE TICKET_DATE,
tp.TICKET_ERROR TICKET_ERROR,
tph.TICKET_NUMBER TICKET_NUMBER,
tp.TYPE TYPE ,
ti.ORIGEN ORIGEN,
tp.VALID VALID 
FROM SCH_CENTRA_ID.TAKS_PROVISIONING tp
join SCH_CENTRA_ID.OPERATIONS_PROVISIONING op ON op.ID = tp.OPERATION_PROVISIONING_ID
join SCH_CENTRA_ID.TAKS_PROVISIONING_HISTORY tph ON tph.TASK_PROVISIONING_ID=tp.ID
join SCH_CENTRA_ID.TRANSACTIONAL_IDENTITY ti on op.TRANSACTIONAL_IDENTITY_ID=ti.ID
JOIN SCH_CENTRA_ID.TRANSACTIONAL_PROFILES tr on tp.TRANSACTIONAL_PROFILE_ID = tr.ID
JOIN SCH_CENTRA_ID.APPLICATIONS a ON tp.APPLICATION_ID = a.ID
go
CREATE VIEW SCH_CENTRA_ID.TEMPLATE_PROFILES_AD_VW (TRANSACTIONAL_PROFILE_ID, FIELD_CODE, FIELD_VALUE) AS 
SELECT TRANSACTIONAL_PROFILE_ID, FIELD_CODE, FIELD_VALUE  
FROM   
   (SELECT TRANSACTIONAL_PROFILE_ID,
     CASE WHEN ACCOUNT_CONTAINER IS NULL THEN '' ELSE CAST(ACCOUNT_CONTAINER AS VARCHAR(1000)) END ACCOUNT_CONTAINER,
     CASE WHEN ACTIVATE_MAIL IS NULL THEN '0' ELSE CAST(ACTIVATE_MAIL AS VARCHAR(1000)) END ACTIVATE_MAIL,
     CASE WHEN ALLOW_LOGON_TO_TERMINAL_SERVER IS NULL THEN '0' ELSE CAST(ALLOW_LOGON_TO_TERMINAL_SERVER AS VARCHAR(1000)) END ALLOW_LOGON_TO_TERMINAL_SERVER,
     CASE WHEN CONNECT_FOLLOWING_DRIVE IS NULL THEN '' ELSE CAST(CONNECT_FOLLOWING_DRIVE AS VARCHAR(1000)) END CONNECT_FOLLOWING_DRIVE,
     CASE WHEN EXCHANGE_ADVANCED_ACTIVE_SYNC IS NULL THEN '0' ELSE CAST(EXCHANGE_ADVANCED_ACTIVE_SYNC AS VARCHAR(1000)) END EXCHANGE_ADVANCED_ACTIVE_SYNC,
     CASE WHEN EXCHANGE_ADVANCED_OWA IS NULL THEN '0' ELSE CAST(EXCHANGE_ADVANCED_OWA AS VARCHAR(1000)) END EXCHANGE_ADVANCED_OWA,
     CASE WHEN GROUP_AD IS NULL THEN '' ELSE CAST(GROUP_AD AS VARCHAR(1000)) END GROUP_AD,
     CASE WHEN MAILBOX_TYPE IS NULL THEN '' ELSE CAST(MAILBOX_TYPE AS VARCHAR(1000)) END MAILBOX_TYPE,
     CASE WHEN PASSWORD_NOT_EXPIRE IS NULL THEN '0' ELSE CAST(PASSWORD_NOT_EXPIRE AS VARCHAR(1000)) END PASSWORD_NOT_EXPIRE,
     CASE WHEN SHOULD_CHANGE_PASSWORD_FIRST_TIME IS NULL THEN '0' ELSE CAST(SHOULD_CHANGE_PASSWORD_FIRST_TIME AS VARCHAR(1000)) END SHOULD_CHANGE_PASSWORD_FIRST_TIME,
     CASE WHEN SHOULD_NOT_CHANGE_PASSWORD IS NULL THEN '0' ELSE CAST(SHOULD_NOT_CHANGE_PASSWORD AS VARCHAR(1000)) END SHOULD_NOT_CHANGE_PASSWORD,
     CASE WHEN SIP IS NULL THEN '0' ELSE CAST(SIP AS VARCHAR(1000)) END SIP,
     CASE WHEN TERMINAL_SERVICES_HOME_DIRECTORY IS NULL THEN '' ELSE CAST(TERMINAL_SERVICES_HOME_DIRECTORY AS VARCHAR(1000)) END TERMINAL_SERVICES_HOME_DIRECTORY,
     CASE WHEN TERMINAL_SERVICES_PROFILE IS NULL THEN '' ELSE CAST(TERMINAL_SERVICES_PROFILE AS VARCHAR(1000)) END TERMINAL_SERVICES_PROFILE
   FROM SCH_CENTRA_ID.TEMPLATE_PROFILES_AD) p  
UNPIVOT  
   (FIELD_VALUE FOR FIELD_CODE IN   
      (
        ACCOUNT_CONTAINER,
        ACTIVATE_MAIL,
        ALLOW_LOGON_TO_TERMINAL_SERVER,
        CONNECT_FOLLOWING_DRIVE,
        EXCHANGE_ADVANCED_ACTIVE_SYNC,
        EXCHANGE_ADVANCED_OWA,
        GROUP_AD,
        MAILBOX_TYPE,
        PASSWORD_NOT_EXPIRE,
        SHOULD_CHANGE_PASSWORD_FIRST_TIME,
        SHOULD_NOT_CHANGE_PASSWORD,
        SIP,
        TERMINAL_SERVICES_HOME_DIRECTORY,
        TERMINAL_SERVICES_PROFILE
      )  
) AS unpvt
go
CREATE VIEW SCH_CENTRA_ID.TEMPLATE_PROFILES_MATRIX_VW (ID, TRANSACTIONAL_PROFILE_ID, FIELD_CODE, FIELD_NAME, FIELD_DETAIL_CODE, FIELD_DETAIL_NAME, FIELD_DETAIL_VALUE, APPLICATION_CODE, VALID, GROUPER, FIELD_ID, FIELD_DETAIL_ID) AS 
select
tpmd.ID,
tpm.TRANSACTIONAL_PROFILE_ID,
m.CODE FIELD_CODE,
m.NAME FIELD_NAME,
md.CODE FIELD_DETAIL_CODE,
md.NAME FIELD_DETAIL_NAME,
tpmd.VALUE FIELD_DETAIL_VALUE,
ap.CODE APPLICATION_CODE,
tpmd.VALID,
tpmg.ID GROUPER,
m.ID FIELD_ID,
md.ID FIELD_DETAIL_ID
from SCH_CENTRA_ID.TEMPLATE_PROFILES_MATRICES tpm
join SCH_CENTRA_ID.TEMPLATE_PROFILES_MATRICES_GROUP tpmg on tpmg.TEMPLATE_PROFILE_MATRIX_ID=tpm.ID
join SCH_CENTRA_ID.TEMPLATE_PROFILES_MATRICES_DETAIL tpmd on tpmd.TEMPLATE_PROFILE_MATRIX_GROUP_ID=tpmg.ID
join SCH_CENTRA_ID.MATRICES_DETAIL md on tpmd.MATRIX_DETAIL_ID=md.ID
join SCH_CENTRA_ID.MATRICES m on tpm.MATRIX_ID=m.ID
join SCH_CENTRA_ID.TRANSACTIONAL_PROFILES tr on  tr.ID=tpm.TRANSACTIONAL_PROFILE_ID
join SCH_CENTRA_ID.APPLICATIONS ap on ap.id=tr.application_id
where tpm.VALID=1 and  tpmg.VALID=1 

go
CREATE VIEW SCH_CENTRA_ID.TEMPLATE_PROFILES_VW (ID, FIELD_CODE, FIELD_NAME, FIELD_VALUE, TRANSACTIONAL_PROFILE_ID, APPLICATION_CODE, VALID, FIELD_ID) AS 
SELECT 
tp.ID,
f.CODE FIELD_CODE,
f.NAME FIELD_NAME,
tp.FIELD_VALUE FIELD_VALUE,
tp.TRANSACTIONAL_PROFILE_ID,
apg.CODE APPLICATION_CODE,
tp.VALID,
f.ID FIELD_ID
FROM SCH_CENTRA_ID.TEMPLATE_PROFILES tp
left join SCH_CENTRA_ID.FIELDS f on tp.FIELD_ID=f.ID
left join SCH_CENTRA_ID.TRANSACTIONAL_PROFILES tr on  tr.ID=tp.TRANSACTIONAL_PROFILE_ID
left join SCH_CENTRA_ID.APPLICATIONS ap on ap.id=tr.application_id
left join SCH_CENTRA_ID.APPLICATIONS_GROUP apg on apg.id=ap.APPLICATION_GROUP_ID

go
CREATE VIEW SCH_CENTRA_ID.TRANSACTIONAL_PROFILES_MATRICES (ID, VALID, TRANSACTIONAL_PROFILE_CODE, TRANSACTIONAL_PROFILE_NAME, APPLICATION_CODE, APPLICATION_NAME, APPLICATION_AUTOMATIC, RISK_LEVEL, COMMENTS, FIELD_NAME, FIELD_VALUE, STATUS, TEMPLATE_PROFILE_MATRIX_GROUP_ID) AS 
SELECT 
TP.ID ID,
1 VALID,
TP.CODE TRANSACTIONAL_PROFILE_CODE, 
TP.NAME TRANSACTIONAL_PROFILE_NAME,
A.CODE APPLICATION_CODE,
A.NAME APPLICATION_NAME,
A.AUTOMATIC_PROVISION APPLICATION_AUTOMATIC,
C_NIVREGI.NAME RISK_LEVEL,
TP.COMMENTS COMMENTS,
MA.NAME FIELD_NAME,
CASE WHEN MAD.ORDINAL=1 
THEN MAD.NAME +'=' +TPMD.VALUE 
ELSE  MAD.NAME +'=' +TPMD.VALUE
END FIELD_VALUE,
CASE TP.VALID WHEN 1 THEN 'ACTIVO' ELSE 'ELIMINADO'END STATUS,
TPMD.TEMPLATE_PROFILE_MATRIX_GROUP_ID
FROM SCH_CENTRA_ID.TRANSACTIONAL_PROFILES TP 
JOIN SCH_CENTRA_ID.APPLICATIONS A ON TP.APPLICATION_ID = A.ID AND A.MANDATORY_MATRIX=1
LEFT JOIN SCH_CENTRA_ID.APPLICATIONS_GROUP AG ON A.APPLICATION_GROUP_ID=AG.ID 
LEFT JOIN SCH_CENTRA_ID.CATALOGS C_NIVREGI ON TP.CATALOG_RISK_LEVEL_ID=C_NIVREGI.ID
JOIN SCH_CENTRA_ID.TEMPLATE_PROFILES_MATRICES TPM ON TPM.TRANSACTIONAL_PROFILE_ID=TP.ID
JOIN SCH_CENTRA_ID.TEMPLATE_PROFILES_MATRICES_GROUP TPMG ON TPMG.TEMPLATE_PROFILE_MATRIX_ID=TPM.ID AND TPMG.VALID=1
JOIN SCH_CENTRA_ID.TEMPLATE_PROFILES_MATRICES_DETAIL TPMD ON TPMD.TEMPLATE_PROFILE_MATRIX_GROUP_ID=TPMG.ID
JOIN SCH_CENTRA_ID.MATRICES MA ON MA.ID=TPM.MATRIX_ID
JOIN SCH_CENTRA_ID.MATRICES_DETAIL MAD ON MAD.ID = TPMD.MATRIX_DETAIL_ID
go
CREATE VIEW SCH_CENTRA_ID.TRANSACTIONAL_PROFILES_REPORT_VW (ID, VALID, TRANSACTIONAL_PROFILE_CODE, TRANSACTIONAL_PROFILE_NAME, APPLICATION_CODE, APPLICATION_NAME, APPLICATION_AUTOMATIC, RISK_LEVEL, COMMENTS, FIELD_NAME, FIELD_VALUE, STATUS) AS 
SELECT 
TP.ID ID,
1 VALID,
TP.CODE TRANSACTIONAL_PROFILE_CODE, 
TP.NAME TRANSACTIONAL_PROFILE_NAME,
A.CODE APPLICATION_CODE,
A.NAME APPLICATION_NAME,
A.AUTOMATIC_PROVISION APPLICATION_AUTOMATIC,
C_NIVREGI.NAME RISK_LEVEL,
TP.COMMENTS COMMENTS,
F.NAME FIELD_NAME,
TR.FIELD_VALUE FIELD_VALUE,
CASE TP.VALID WHEN 1 THEN 'ACTIVO' ELSE 'ELIMINADO'END STATUS
FROM SCH_CENTRA_ID.TRANSACTIONAL_PROFILES TP 
LEFT JOIN SCH_CENTRA_ID.APPLICATIONS A ON TP.APPLICATION_ID = A.ID
LEFT JOIN SCH_CENTRA_ID.APPLICATIONS_GROUP AG ON A.APPLICATION_GROUP_ID=AG.ID
LEFT JOIN SCH_CENTRA_ID.TEMPLATE_PROFILES TR ON TR.TRANSACTIONAL_PROFILE_ID = TP.ID
LEFT JOIN SCH_CENTRA_ID.FIELDS F ON F.ID = TR.FIELD_ID
LEFT JOIN SCH_CENTRA_ID.CATALOGS C_NIVREGI ON TP.CATALOG_RISK_LEVEL_ID=C_NIVREGI.ID
WHERE A.CODE <> 'AD'
UNION ALL
SELECT 
TP.ID ID,
1 VALID,
TP.CODE TRANSACTIONAL_PROFILE_CODE, 
TP.NAME TRANSACTIONAL_PROFILE_NAME,
A.CODE APPLICATION_CODE,
A.NAME APPLICATION_NAME,
A.AUTOMATIC_PROVISION APPLICATION_AUTOMATIC,
C_NIVREGI.NAME RISK_LEVEL,
TP.COMMENTS COMMENTS,
TR.FIELD_CODE FIELD_NAME,
TR.FIELD_VALUE FIELD_VALUE,
CASE TP.VALID WHEN 1 THEN 'ACTIVO' ELSE 'ELIMINADO'END STATUS
FROM SCH_CENTRA_ID.TRANSACTIONAL_PROFILES TP 
JOIN SCH_CENTRA_ID.APPLICATIONS A ON TP.APPLICATION_ID = A.ID
JOIN SCH_CENTRA_ID.APPLICATIONS_GROUP AG ON A.APPLICATION_GROUP_ID=AG.ID
JOIN SCH_CENTRA_ID.TEMPLATE_PROFILES_AD_VW TR ON TR.TRANSACTIONAL_PROFILE_ID = TP.ID
LEFT JOIN SCH_CENTRA_ID.CATALOGS C_NIVREGI ON TP.CATALOG_RISK_LEVEL_ID=C_NIVREGI.ID
UNION ALL
SELECT 
ID,
VALID,
TRANSACTIONAL_PROFILE_CODE, 
TRANSACTIONAL_PROFILE_NAME,
APPLICATION_CODE,
APPLICATION_NAME,
APPLICATION_AUTOMATIC,
RISK_LEVEL,
COMMENTS,
FIELD_NAME,
STUFF(
                 (
                  SELECT ';' + FIELD_VALUE
                  FROM SCH_CENTRA_ID.TRANSACTIONAL_PROFILES_MATRICES as ct1
                  WHERE ct1.TRANSACTIONAL_PROFILE_CODE = ct2.TRANSACTIONAL_PROFILE_CODE AND ct1.TEMPLATE_PROFILE_MATRIX_GROUP_ID = ct2.TEMPLATE_PROFILE_MATRIX_GROUP_ID
                  
                  FOR XML PATH ('')
                  ), 1, 1, ''
 
               )  AS  FIELD_VALUE,
CASE VALID WHEN 1 THEN 'ACTIVO' ELSE 'ELIMINADO'END STATUS               
FROM SCH_CENTRA_ID.TRANSACTIONAL_PROFILES_MATRICES as ct2
GROUP BY 
ID,
VALID,
TRANSACTIONAL_PROFILE_CODE, 
TRANSACTIONAL_PROFILE_NAME,
APPLICATION_CODE,
APPLICATION_NAME,
APPLICATION_AUTOMATIC,
RISK_LEVEL,
COMMENTS,
FIELD_NAME,
TEMPLATE_PROFILE_MATRIX_GROUP_ID
go
CREATE VIEW SCH_CENTRA_ID.TRANSACTIONAL_PROFILES_VW (GLOBAL_PROFILE_ID, GLOBAL_PROFILE_CODE, GLOBAL_PROFILE_NAME, GLOBAL_PROFILE_IS_BIRTH, ID, TRANSACTIONAL_PROFILE_CODE, TRANSACTIONAL_PROFILE_NAME, TRANSACTIONAL_PROFILE_COMMENTS, TRANSACTIONAL_PROFILE_CATALOG_RISK_LEVEL_ID, TRANSACTIONAL_PROFILE_APPLICATION_ID, APPLICATION_CODE, APPLICATION_NAME, APPLICATION_AUTOMATIC_PROVISION, VALID, FILTER, APPLICATION_ID, APPLICATION_GROUP_ID, APPLICATION_GROUP_CODE, APPLICATION_GROUP_NAME, GLOBAL_TRANSACTIONAL_PROFILES_VALID) AS 
 select
gp.id GLOBAL_PROFILE_ID,
gp.code GLOBAL_PROFILE_CODE,
gp.name GLOBAL_PROFILE_NAME,
gp.is_birth GLOBAL_PROFILE_IS_BIRTH,
tp.id ID,
tp.code TRANSACTIONAL_PROFILE_CODE,
tp.name TRANSACTIONAL_PROFILE_NAME,
tp.comments TRANSACTIONAL_PROFILE_COMMENTS,
tp.catalog_risk_level_id TRANSACTIONAL_PROFILE_CATALOG_RISK_LEVEL_ID,
tp.application_id TRANSACTIONAL_PROFILE_APPLICATION_ID,
a.code APPLICATION_CODE,
a.name APPLICATION_NAME,
a.automatic_provision APPLICATION_AUTOMATIC_PROVISION,
tp.valid VALID,
tp.filter FILTER,
a.ID APPLICATION_ID,
ag.ID APPLICATION_GROUP_ID,
ag.CODE APPLICATION_GROUP_CODE,
ag.NAME APPLICATION_GROUP_NAME,
CASE  WHEN gtp.VALID IS NULL  THEN 0 ELSE gtp.VALID END GLOBAL_TRANSACTIONAL_PROFILES_VALID
from sch_centra_id.TRANSACTIONAL_PROFILES tp
left join sch_centra_id.GLOBAL_TRANSACTIONAL_PROFILES gtp on gtp.TRANSACTIONAL_PROFILE_ID=tp.id
left join sch_centra_id.GLOBAL_PROFILES gp on gtp.GLOBAL_PROFILE_ID=gp.id
left join sch_centra_id.APPLICATIONS a on a.id=tp.application_id
left join SCH_CENTRA_ID.APPLICATIONS_GROUP ag on a.APPLICATION_GROUP_ID=ag.ID

go
CREATE VIEW SCH_CENTRA_ID.USERDATA_REPORT_VW (ID, VALID, USERDATA_USERNAME, USERDATA_IDENTIFICATION, USERDATA_NAME, USERDATA_EMPLOYEE_CODE, USERDATA_TYPE_USER, USERDATA_SUBTYPE_USER, USERDATA_MOBILE, USERDATA_MAIL, USERDATA_STATUS, USERDATA_DATE_CREATION, USERDATA_DATE_DELETION, USERDATA_DATE_START, USERDATE_DATE_END, GLOBAL_PROFILE_CODE, GLOBAL_PROFILE_NAME, COMPANY_NAME, DIVISION_NAME, AREA_NAME, DEPARTMENT_NAME, POSITION_NAME, COST_CENTER_CODE, COST_CENTER_NAME, SUPERVISOR_IDENTIFICACION, SUPERVISOR_NAME) AS 
SELECT 
UD.ID ID,
1 VALID,
UD.USERNAME USERDATA_USERNAME,
UD.IDENTIFICATION USERDATA_IDENTIFICATION,
UD.EMPLOYEE_COMPLETE_NAME USERDATA_NAME,
UD.EMPLOYEE_CODE USERDATA_EMPLOYEE_CODE,
TU.NAME USERDATA_TYPE_USER,
STU.NAME USERDATA_SUBTYPE_USER,
UD.MOBILE USERDATA_MOBILE,
UD.MAIL USERDATA_MAIL,
UD.EMPLOYEE_STATUS USERDATA_STATUS,
UD.EFFECTIVE_DATE USERDATA_DATE_CREATION,
UD.ENDING_WORK_DATE USERDATA_DATE_DELETION,
UD.EMPLOYEE_INCOME_DATE USERDATA_DATE_START,
UD.EMPLOYEE_DEPARTURE_DATE USERDATE_DATE_END,
GP.CODE GLOBAL_PROFILE_CODE,
GP.NAME GLOBAL_PROFILE_NAME,
C.BUSINESS_NAME COMPANY_NAME,
DIVISION.NAME DIVISION_NAME,
AREA.NAME AREA_NAME,
DEPARTMENT.NAME DEPARTMENT_NAME,
POSITION.NAME POSITION_NAME,
CC.CODE COST_CENTER_CODE,
CC.NAME COST_CENTER_NAME,
SUPER.IDENTIFICATION SUPERVISOR_IDENTIFICACION,
SUPER.EMPLOYEE_COMPLETE_NAME SUPERVISOR_NAME
FROM SCH_CENTRA_ID.USERDATA UD
LEFT JOIN SCH_CENTRA_ID.GLOBAL_PROFILES GP ON UD.GLOBAL_PROFILE_ID = GP.ID
LEFT JOIN SCH_CENTRA_ID.TYPE_USERS TU ON TU.ID =UD.TYPE_USER_ID
LEFT JOIN SCH_CENTRA_ID.TYPE_USERS STU ON STU.ID =UD.SUBTYPE_USER_ID
LEFT JOIN SCH_CENTRA_ID.COMPANIES C ON C.ID = UD.COMPANY_ID
LEFT JOIN SCH_CENTRA_ID.CATALOGS DIVISION ON DIVISION.ID =UD.CATALOG_DIVISION_ID
LEFT JOIN SCH_CENTRA_ID.CATALOGS AREA ON AREA.ID =UD.CATALOG_AREA_ID
LEFT JOIN SCH_CENTRA_ID.CATALOGS DEPARTMENT ON DEPARTMENT.ID =UD.CATALOG_DEPARTMENT_ID
LEFT JOIN SCH_CENTRA_ID.CATALOGS POSITION ON POSITION.ID =UD.CATALOG_POSITION_ID
LEFT JOIN SCH_CENTRA_ID.COSTS_CENTERS CC ON CC.ID = UD.COST_CENTER_ID
LEFT JOIN SCH_CENTRA_ID.USERDATA SUPER ON UD.USERDATA_SUPERVISOR_ID = SUPER.ID
go
CREATE VIEW SCH_CENTRA_ID.USERDATA_VW (ID, USERNAME, CODIGO_EMPLEADO, CODIGO_TRABAJADOR, IDENTIFICACION, APELLIDOS_EMPLEADO, NOMBRES_EMPLEADO, CELULAR, NUMERO_CUENTA_DEPOSITO, FECHA_INGRESO, FECHA_SALIDA, IDENTIFICACION_SUPERVISOR, NOMBRE_SUPERVISOR, CODIGO_COMPANIA, NOMBRE_COMPANIA, CODIGO_DIVISION, NOMBRE_DIVISION, CODIGO_AREA, NOMBRE_AREA, CODIGO_DEPARTAMENTO, NOMBRE_DEPARTAMENTO, CODIGO_CARGO, NOMBRE_CARGO, CODIGO_CENTRO_COSTO, NOMBRE_CENTRO_COSTO, CODIGO_AGRUPACION, CODIGO_NIVEL_JERARQUICO, TIPOUSUARIO, SUBTIPO, ESTADO_EMPLEADO, NOMBRELOCALIDAD, CORREO_ELECTRONICO, ID_PERFIL_GLOBAL, CODIGO_PERFIL_GLOBAL, NOMBRE_PERFIL_GLOBAL, ID_USUARIO, VALID, NOMBRES_COMPLETOS, CORREO_ELECTRONICO_PERSONAL, UUID, GUID, TIPO_IDENTIFICACION, TIPO_ROTATIVO, ID_SUPERVISOR, IDENTIFICACION_CONTRAPARTE, NOMBRE_CONTRAPARTE, ID_CONTRAPARTE, IDENTIFICACION_RESPONSABLE, NOMBRE_RESPONSABLE, ID_RESPONSABLE, COUNTER_GENERIC_ROTARY, COUNTER_GENERIC_MAIL, ALIAS, MAILBOX, TIER) AS 
select 
ud.ID,
ud.USERNAME USERNAME,
ud.EMPLOYEE_CODE CODIGO_EMPLEADO,
ud.WORKER_CODE CODIGO_TRABAJADOR,
ud.IDENTIFICATION IDENTIFICACION,
ud.EMPLOYEE_FIRST_SURNAME+' ' +ISNULL(ud.EMPLOYEE_SECOND_SURNAME,'') APELLIDOS_EMPLEADO,
ud.EMPLOYEE_FIRST_NAME+' ' +ISNULL(ud.EMPLOYEE_SECOND_NAME,'') NOMBRES_EMPLEADO,
ud.MOBILE CELULAR,
ud.DEPOSIT_ACCOUNT_NUMBER NUMERO_CUENTA_DEPOSITO,
ud.EMPLOYEE_INCOME_DATE FECHA_INGRESO,
ud.EMPLOYEE_DEPARTURE_DATE FECHA_SALIDA,
su.IDENTIFICATION IDENTIFICACION_SUPERVISOR,
su.EMPLOYEE_COMPLETE_NAME  NOMBRE_SUPERVISOR,
c.CODE CODIGO_COMPANIA,
c.BUSINESS_NAME NOMBRE_COMPANIA,
div.CODE CODIGO_DIVISION,
div.NAME NOMBRE_DIVISION,
are.CODE CODIGO_AREA,
are.NAME NOMBRE_AREA,
dto.CODE CODIGO_DEPARTAMENTO,
dto.NAME NOMBRE_DEPARTAMENTO,
car.CODE CODIGO_CARGO,
car.NAME NOMBRE_CARGO,
cc.CODE CODIGO_CENTRO_COSTO,
cc.NAME NOMBRE_CENTRO_COSTO,
ud.GROUPING_CODE CODIGO_AGRUPACION,
ud.HIERARCHICAL_LEVEL CODIGO_NIVEL_JERARQUICO,
tu.CODE TIPOUSUARIO,
stu.CODE SUBTIPO,
ud.EMPLOYEE_STATUS ESTADO_EMPLEADO,
ud.LOCATION_NAME NOMBRELOCALIDAD,
ud.MAIL CORREO_ELECTRONICO,
gp.ID ID_PERFIL_GLOBAL,
gp.CODE CODIGO_PERFIL_GLOBAL,
gp.NAME NOMBRE_PERFIL_GLOBAL,
ud.id ID_USUARIO,
ud.VALID,
ud.EMPLOYEE_FIRST_SURNAME+' ' +ISNULL(ud.EMPLOYEE_SECOND_SURNAME,'')+' '+ ud.EMPLOYEE_FIRST_NAME+' ' +ISNULL(ud.EMPLOYEE_SECOND_NAME,'') NOMBRES_COMPLETOS,
ud.USERNAME_VIEW CORREO_ELECTRONICO_PERSONAL,
ud.UUID UUID,
ud.GUID GUID,
ti.NAME TIPO_IDENTIFICACION,
ud.TYPE_ROTARY TIPO_ROTATIVO,
su.ID ID_SUPERVISOR,
con.IDENTIFICATION IDENTIFICACION_CONTRAPARTE,
con.EMPLOYEE_COMPLETE_NAME  NOMBRE_CONTRAPARTE,
con.ID ID_CONTRAPARTE,
res.IDENTIFICATION IDENTIFICACION_RESPONSABLE,
res.EMPLOYEE_COMPLETE_NAME NOMBRE_RESPONSABLE,
res.ID ID_RESPONSABLE,
ud.COUNTER_GENERIC_ROTARY COUNTER_GENERIC_ROTARY,
ud.COUNTER_GENERIC_MAIL COUNTER_GENERIC_MAIL,
ud.ALIAS,
ud.MAILBOX,
ud.TIER
from SCH_CENTRA_ID.USERDATA ud
left join SCH_CENTRA_ID.USERDATA su on ud.USERDATA_SUPERVISOR_ID=su.id
left join SCH_CENTRA_ID.USERDATA con on ud.USERDATA_BANK_COUNTERPART_ID=con.ID
left join SCH_CENTRA_ID.USERDATA res on ud.USERDATA_RESPONSIBLE_USER_ID=res.ID
left join SCH_CENTRA_ID.COMPANIES c on ud.COMPANY_ID=c.id
left join SCH_CENTRA_ID.CATALOGS div on ud.CATALOG_DIVISION_ID=div.id
left join SCH_CENTRA_ID.CATALOGS are on ud.CATALOG_AREA_ID=are.id
left join SCH_CENTRA_ID.CATALOGS dto on ud.CATALOG_DEPARTMENT_ID=dto.id
left join SCH_CENTRA_ID.CATALOGS car on ud.CATALOG_POSITION_ID=car.id
left join SCH_CENTRA_ID.CATALOGS ti on ud.CATALOG_IDENTIFICATION_TYPE_ID=ti.id
left join SCH_CENTRA_ID.COSTS_CENTERS cc on ud.COST_CENTER_ID=cc.id
left join SCH_CENTRA_ID.TYPE_USERS tu on ud.TYPE_USER_ID=tu.ID
left join SCH_CENTRA_ID.TYPE_USERS stu on ud.SUBTYPE_USER_ID=stu.ID
left join SCH_CENTRA_ID.GLOBAL_PROFILES gp on ud.GLOBAL_PROFILE_ID=gp.ID
go
--/

CREATE FUNCTION SCH_CENTRA_ID.LOOK_CONTAIN (@rule text,
                                       @contain VARCHAR(200),
                                       @type VARCHAR(200)) RETURNS INT
AS
BEGIN
    DECLARE @i INT
    DECLARE @j INT
    DECLARE @r INT
    DECLARE @token varchar(200)
    DECLARE @partial varchar(200)
    SET @token=@type+' LIKE '
    SET @i=CHARINDEX(@token,@rule)+LEN(@type)+6
    IF @i>0 
      BEGIN
         SET @j=CHARINDEX('"',@rule,@i)
         SET @partial=SUBSTRING(@rule,@i,@j-@i)
         SET @r =CHARINDEX(@partial,@contain)
      END
    ELSE
      BEGIN
        SET @r =1
      END
    RETURN @r
END
GO



------------------------2020-09-29-1-CREAR-FUNCTION-STRING-TO-BASE64


-- Base64 To VARCHAR
IF OBJECT_ID (N'[DBO].[STRING_BASE64]', N'FN') IS NOT NULL  
    DROP FUNCTION DBO.STRING_BASE64;  
GO
CREATE FUNCTION [DBO].[STRING_BASE64]
(
    @Input_Base64_Value VARCHAR(MAX)
)
RETURNS VARCHAR(MAX)
AS
BEGIN
    RETURN (
		SELECT
			CAST(
                CAST(N'' AS XML).value('xs:base64Binary(sql:variable("@Input_Base64_Value"))', 'VARBINARY(MAX)') 
            AS VARCHAR(MAX)
            ) AS RetVal
    )
END
GO

IF NOT EXISTS (SELECT 1
        FROM INFORMATION_SCHEMA.COLUMNS
        WHERE upper(TABLE_SCHEMA) = 'SCH_CENTRA_ID'
        AND upper(TABLE_NAME) = 'PROFILES_SYNCHRONIZATION_EXECUTIONS'
        AND upper(COLUMN_NAME) = 'GUID')
BEGIN
   ALTER TABLE SCH_CENTRA_ID.PROFILES_SYNCHRONIZATION_EXECUTIONS ADD GUID nvarchar(100)
END
GO



